@page "/addarticle"

@attribute [StreamRendering]
@attribute [Authorize(Policy = "CreatorPolicy")]

@inject IAddArticleUseCase _addArticleUseCase

<h3>Add Article</h3>

@* <EditForm Model="article">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="Title">Название статьи</label>
        <InputText id="Title" @bind-Value="article.Title" class="form-control"></InputText>
    </div>

</EditForm> *@

@CurrentUserName

@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    [Inject]
    UserManager<ApplicationUser> userManager { get; set; }

    private string CurrentUserName;
    private Article? article;

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationState).User;

        if (user.Identity.IsAuthenticated)
        {
            var currentUser = await userManager.GetUserAsync(user);
            var userName = currentUser.UserName;
            CurrentUserName = userName;
        }
        else return;
    }

}
